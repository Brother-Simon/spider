use :node;

var Node = require('../Node').Node;

func StringLiteral(chars)
  extends Node {
  
  this.type = 'StringLiteral';
  this.chars = chars;
}

StringLiteral.prototype.codegen = () -> {
  if !super.codegen() {
    return;
  }
  
  var elements = [];
  
  for value in this.chars {
    if typeof value == 'string' {
      var lastElement = elements[elements.length - 1];
      if lastElement?.type == 'Literal' {
        lastElement.value += value;
      } else {
        elements.push({
          type: 'Literal',
          value: value
        });
      }
    } else {
      value.parent = this;
      elements.push(value.codegen());
    }
  }
  
  if elements.length == 0 {
    return {
      "type": "Literal",
      "value": ""
    };
  } else if elements.length == 1 {
    return elements[0];
  }
  
  var reduced = elements.reduce((left, right) -> {
    return {
      type: 'BinaryExpression',
      operator: '+',
      left: left,
      right: right
    };
  });
    
  this.type = reduced.type;
  this.operator = reduced.operator;
  this.left = reduced.left;
  this.right = reduced.right;
  
  return this;
};

StringLiteral.prototype.hasCallExpression = () -> false;

exports.StringLiteral = StringLiteral;